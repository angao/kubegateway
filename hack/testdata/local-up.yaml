apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kubegateway
spec:
  serviceName: kubegateway
  replicas: 1
  selector:
    matchLabels:
      app: kubegateway
  template:
    metadata:
      labels:
        app: kubegateway
    spec:
      containers:
        - name: kubegateway
          image: kube-gateway:local-up
          imagePullPolicy: IfNotPresent
          args:
            # - --authorization-mode=RBAC
            - --secure-port=8443
            - --enable-proxy-access-log=true
            - --client-ca-file=/etc/kubegateway/pki/ca.pem
            - --tls-cert-file=/etc/kubegateway/pki/kubegateway.pem
            - --tls-private-key-file=/etc/kubegateway/pki/kubegateway-key.pem
            - --upstream-cluster-file=/etc/kubegateway/localhost.yaml
            - --v=5
          ports:
            - containerPort: 8443
              name: proxy
          volumeMounts:
            - name: gateway-server-pki
              mountPath: /etc/kubegateway/pki
              readOnly: true
            - mountPath: /etc/kubegateway
              name: upstream-cluster
              readOnly: true
      hostNetwork: true
      volumes:
        - name: gateway-server-pki
          secret:
            secretName: gateway-sever-pki
        - name: upstream-cluster
          configMap:
            name: upstream-cluster

---
# kubegateway service
apiVersion: v1
kind: Service
metadata:
  name: kubegateway
spec:
  type: ClusterIP
  selector:
    app: kubegateway
  ports:
    - name: proxy
      port: 8443
      protocol: TCP
      targetPort: 8443

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubegateway
rules:
  - apiGroups: [""]
    resources: ["users", "groups", "serviceaccounts"]
    verbs: ["impersonate"]
  # Can set "Impersonate-Extra-scopes" header and the "Impersonate-Uid" header.
  - apiGroups: ["authentication.k8s.io"]
    resources: ["userextras/scopes", "uids"]
    verbs: ["impersonate"]
  - apiGroups: ["authentication.k8s.io"]
    resources: ["tokenreviews", "subjectaccessreviews"]
    verbs: ["create"]
  - nonResourceURLs: ["/healthz*", "/readyz*", "/livez*"]
    verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubegateway
subjects:
  - kind: User
    name: kubegateway-upstream-client # Name is case sensitive
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: kubegateway
  apiGroup: rbac.authorization.k8s.io
